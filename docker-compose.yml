services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 1000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 5s
      timeout: 10s
      retries: 5      

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      zookeeper:
        condition: service_healthy
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "9092"]
      interval: 5s
      timeout: 10s
      retries: 5      

  producer:
    build:
      context: ./data_source
      dockerfile: Dockerfile
    environment:
      KAFKA_HOST: kafka:9092
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PWD: ${KAFKA_PWD}      
      SASL_MECHANISM: ${SASL_MECHANISM}      
      SECURITY_PROTOCOL: ${SECURITY_PROTOCOL}     
    depends_on:
      kafka:
        condition: service_healthy

  backend:
    build:
      context: ./backend/app
    environment:
      PORT: 8000
      KAFKA_HOST: kafka:9092
      KAFKA_USER: ${KAFKA_USER}
      KAFKA_PWD: ${KAFKA_PWD}      
      SASL_MECHANISM: ${SASL_MECHANISM}      
      SECURITY_PROTOCOL: ${SECURITY_PROTOCOL}        
    volumes:
      - ./model:/app/model  # Mount the model directory
    depends_on:
      - producer
    ports:
      - "8000:8000"
      - "${WEB_SERVER_ADDRESS}:8001:8000" # ADDRESS:HOST-PORT:CONTAINER-PORT

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - API_BASE_URL=http://backend:8000
      - NEXT_PUBLIC_WEBSOCKET_ADDRESS=${WEBSOCKET_ADDRESS}      
    depends_on:
      - backend
